<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  
<mapper namespace="kr.or.nationRental.functionary.service.FunctionaryMapper">
	<insert id="insertFunctionary" parameterType="kr.or.nationRental.functionary.service.FunctionaryDto">
		
		INSERT INTO functionary
			(functionary_id 
			,adminagency_code 
			,functionary_num
			,functionary_pw 
			,functionary_name
			,functionary_phone
			,functionary_email 
			,functionary_date_join)
		VALUES (#{functionaryId}
				,#{adminagencyCode}
				,#{functionaryNum}
				,#{functionaryPw}
				,#{functionaryName}
				,#{functionaryPhone} 
				,#{functionaryEmail} 
				,NOW())
		
	</insert>
	
	<insert id="insertFunctionaryMoveInout" parameterType="kr.or.nationRental.functionary.service.FunctionaryDto">
		INSERT INTO functionary_move_inout
			(functionary_move_inout_code
			,adminagency_code
			,functionary_id
			,functionary_name
			,functionary_date_move_in
			,functionary_date_move_out
			,functionary_state_work)
		VALUES (null
				,#{adminagencyCode}
				,#{functionaryId}
				,#{functionaryName}
				, NOW()
				, null
				, '근무중')
						
	</insert>	
	
	<select id="totalCountFunctionary"
			parameterType="java.util.Map"
			resultType="Integer">
		SELECT
		COUNT(*)
			FROM functionary
			inner join adminagency
				using(adminagency_code)					
			<choose>	      
		        <when test="searchOption == '전체 검색'">    
		        	where functionary.functionary_name like CONCAT('%', #{keyword}, '%')
		        	or adminagency.adminagency_name like CONCAT('%', #{keyword}, '%')		        	        	           
		        </when>
		        <when test="searchOption == '공무원 이름 검색'">    
		        	where functionary.functionary_name like CONCAT('%', #{keyword}, '%')	        	        	           
		        </when>
		        <when test="searchOption == '소속 행정기관 검색'"> 
		        	where adminagency.adminagency_name like CONCAT('%', #{keyword}, '%')		        	        	           
		        </when>
	    	</choose>
	</select>
	
	<select id="selectListFunctionary" parameterType="java.util.Map"  resultType="kr.or.nationRental.functionary.service.FunctionaryDto">
		SELECT
				functionary.functionary_id as functionaryId
				,functionary.adminagency_code as adminagencyCode
				,adminagency.adminagency_name as adminagencyName
				,functionary.functionary_num as functionaryNum
				,functionary.functionary_pw as functionaryPw
				,functionary.functionary_name as functionaryName
				,functionary.functionary_phone as functionaryPhone
				,functionary.functionary_email as functionaryEmail
				,functionary.functionary_date_join as functionaryDateJoin
			FROM functionary
			inner join adminagency
				using(adminagency_code)					
			<choose>	      
		        <when test="searchOption == '전체 검색'">    
		        	where functionary.functionary_name like CONCAT('%', #{keyword}, '%')
		        	or adminagency.adminagency_name like CONCAT('%', #{keyword}, '%')		        	        	           
		        </when>
		        <when test="searchOption == '공무원 이름 검색'">    
		        	where functionary.functionary_name like CONCAT('%', #{keyword}, '%')	        	        	           
		        </when>
		        <when test="searchOption == '소속 행정기관 검색'"> 
		        	where adminagency.adminagency_name like CONCAT('%', #{keyword}, '%')		        	        	           
		        </when>
	    	</choose>
		
		ORDER BY functionary_date_join DESC
		LIMIT #{beginRow}, #{pagePerRow}
	</select>
	
	<select id="functionaryBasicInformation" parameterType="String" resultType="kr.or.nationRental.functionary.service.FunctionaryDto">
			SELECT
				functionary_id as functionaryId
				,adminagency_code as adminagencyCode
				,functionary_num as functionaryNum
				,functionary_pw as functionaryPw
				,functionary_name as functionaryName
				,functionary_phone as functionaryPhone
				,functionary_email as functionaryEmail
				,functionary_date_join as functionaryDateJoin
			FROM functionary
			where functionary_id = #{functionaryId}		
	</select>
	
	<update id="updateFunctionnary" parameterType="kr.or.nationRental.functionary.service.FunctionaryDto">		
		UPDATE functionary
				SET
			functionary_id = #{functionaryId}
			,adminagency_code = #{adminagencyCode}
			,functionary_name = #{functionaryName}
			,functionary_phone = #{functionaryPhone}
			,functionary_email = #{functionaryEmail}
		WHERE functionary_id=#{functionaryId}
	</update>
	
	<select id="selectFunctionaryMoveInout" parameterType="String" resultType="kr.or.nationRental.functionary.service.FunctionaryDto">
		SELECT
			   functionary_move_inout_code as functionaryMoveInoutCode
			FROM
			    functionary_move_inout
			where functionary_id = #{functionaryId}
			ORDER BY  
			    functionary_date_move_in desc
			    limit 1
	</select>
	
	<update id="updateFuctionaryMoveInout" parameterType="kr.or.nationRental.functionary.service.FunctionaryDto">		
		UPDATE functionary_move_inout
				SET
			functionary_date_move_out = now()
			,functionary_state_work = '전출'			
		WHERE functionary_move_inout_code = #{functionaryMoveInoutCode}
	</update>
	
	<select id="selectAdminagency" parameterType="String" resultType="kr.or.nationRental.functionary.service.FunctionaryDto">
		SELECT
			adminagency_code as adminagencyCode
			,adminagency_name as adminagencyName			
		FROM adminagency
		where adminagency_name like CONCAT('%', #{checkAdminagency}, '%')	
	</select>
	
	<delete id="deleteFunctionnary" parameterType="String">
		DELETE 
			FROM functionary 
			WHERE functionary_id=#{functionaryId}	
	</delete>
	
	<insert id="insertStorageFunctionary" parameterType="kr.or.nationRental.functionary.service.FunctionaryDto">
		
		INSERT INTO storage_functionary
			(storage_functionary_id 
			,adminagency_code 
			,storage_functionary_num
			,storage_functionary_pw 
			,storage_functionary_name
			,storage_functionary_phone
			,storage_functionary_email 
			,storage_functionary_date_join
			,storage_functionary_date_leave)
		VALUES (#{functionaryId}
				,#{adminagencyCode}
				,#{functionaryNum}
				,#{functionaryPw}
				,#{functionaryName}
				,#{functionaryPhone} 
				,#{functionaryEmail} 
				,#{functionaryDateJoin}
				,NOW())
	
	</insert>
	
	<select id="administratorIdCheck"
			parameterType="kr.or.nationRental.login.service.MemberDto"
			resultType="Integer">
		SELECT
			COUNT(*)
		FROM
			administrator
			where administrator_name = #{memberName}
			and administrator_phone = #{memberPhone}			
	</select>
	
	<select id="agencyEmployeeIdCheck"
			parameterType="kr.or.nationRental.login.service.MemberDto"
			resultType="Integer">
		SELECT
			COUNT(*)
		from agency_employee
			where agency_employee_name = #{memberName}
			and agency_employee_phone = #{memberPhone}					
	</select>
	
	<select id="citizenIdCheck"
			parameterType="kr.or.nationRental.login.service.MemberDto"
			resultType="Integer">
		SELECT
			COUNT(*)
		from citizen
			where citizen_name = #{memberName}
			and citizen_phone = #{memberPhone}			
	</select>
	
	<select id="functionaryIdCheck"
			parameterType="kr.or.nationRental.login.service.MemberDto"
			resultType="Integer">
		SELECT
			COUNT(*)
		from functionary
			where functionary_name = #{memberName}
			and functionary_phone = #{memberPhone}				
	</select>
	
	
	
	
	
	<select id="administratorIdSelect" parameterType="kr.or.nationRental.login.service.MemberDto" resultType="String">
		SELECT
			administrator_id as adminId
			from administrator
			where administrator_name = #{memberName}
			and administrator_phone = #{memberPhone}		
	</select>
	
	<select id="agencyEmployeeIdSelect" parameterType="kr.or.nationRental.login.service.MemberDto" resultType="String">
		SELECT
			agency_employee_id as agencyEmployeeId
			from agency_employee
			where agency_employee_name = #{memberName}
			and agency_employee_phone = #{memberPhone}		
	</select>
	
	<select id="citizenIdSelect" parameterType="kr.or.nationRental.login.service.MemberDto" resultType="String">
		SELECT
			citizen_id as citizenId
			from citizen
			where citizen_name = #{memberName}
			and citizen_phone = #{memberPhone}		
	</select>
	
	<select id="functionaryIdSelect" parameterType="kr.or.nationRental.login.service.MemberDto" resultType="String">
		SELECT
			functionary_id as functionaryId
			from functionary
			where functionary_name = #{memberName}
			and functionary_phone = #{memberPhone}		
	</select>
</mapper>
	