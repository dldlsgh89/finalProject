<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="kr.or.nationRental.goodsFacility.service.GoodsFacilityCategoryMapper">
	
	<!--
		selectListDistrict 클래스에 대한 ResultMap
		property에 명시한 항목들은 클래스의 멤버변수를 의미한다.
		column에 명시한 항목들은 해당 멤버변수에 저장될 SELECT절의 컬럼이름이 된다.
	-->
	<resultMap id="selectListGoodsFacility" type="kr.or.nationRental.goodsFacility.service.GoodsFacilityCategoryDto">
		<result property="goodsfacilityOneCode" column="goodsfacility_one_code" />
		<result property="goodsfacilityOneName" column="goodsfacility_one_name" />
		<result property="goodsfacilityTwoCode" column="goodsfacility_two_code" />
		<result property="goodsfacilityTwoName" column="goodsfacility_two_name" />
		<result property="goodsfacilityThreeCode" column="goodsfacility_three_code" />
		<result property="goodsfacilityThreeName" column="goodsfacility_three_name" />
		<result property="goodsfacilityCode" column="goodsfacility_code" />
	</resultMap>

	<!-- 물품시설 카테고리 전체목록보기 및 페이징 -->
	<select id="selectListGoodsFacilityCategory" parameterType="java.util.Map" resultMap="selectListGoodsFacility">
		SELECT 
			goodsfacility_three.goodsfacility_three_code
			, goodsfacility_one.goodsfacility_one_name
			, goodsfacility_two.goodsfacility_two_name
			, goodsfacility_three.goodsfacility_three_name
		FROM 
			goodsfacility_one
		INNER JOIN
			goodsfacility_two
		ON
			goodsfacility_one.goodsfacility_one_code = goodsfacility_two.goodsfacility_one_code
			
		INNER JOIN
			goodsfacility_three
		ON
			goodsfacility_two.goodsfacility_two_code = goodsfacility_three.goodsfacility_two_code
		<choose>	      
	           <when test="searchOption == 'all'">    
	        	where goodsfacility_three.goodsfacility_two_code like CONCAT('%', #{keyword}, '%')
	        	or goodsfacility_one.goodsfacility_one_name like CONCAT('%', #{keyword}, '%')
	        	or goodsfacility_two.goodsfacility_two_name like CONCAT('%', #{keyword}, '%')
	        	or goodsfacility_three.goodsfacility_three_name like CONCAT('%', #{keyword}, '%')	        	        	           
	        </when>
	        <otherwise>
	        	where ${searchOption} like CONCAT('%', #{keyword}, '%')	        
	        </otherwise>
    	</choose>
		ORDER BY goodsfacility_three_code DESC
		LIMIT #{beginRow}, #{pagePerRow}	
	</select>
	
	<!-- 물품시설 카테고리 전체목록 검색 -->
	<select id="totalCountGoodsFacilityCategory" parameterType="java.util.Map"  resultType="Integer">
		SELECT 
			COUNT(*)
		FROM 
			goodsfacility_one
		INNER JOIN
			goodsfacility_two
		ON
			goodsfacility_one.goodsfacility_one_code = goodsfacility_two.goodsfacility_one_code
			
		INNER JOIN
			goodsfacility_three
		ON
			goodsfacility_two.goodsfacility_two_code = goodsfacility_three.goodsfacility_two_code
		<choose>	      
	           <when test="searchOption == 'all'">
	           where goodsfacility_three.goodsfacility_three_code like CONCAT('%', #{keyword}, '%')
	           or goodsfacility_one.goodsfacility_one_name like CONCAT('%', #{keyword}, '%')
	           or goodsfacility_two.goodsfacility_two_name like CONCAT('%', #{keyword}, '%')
	           or goodsfacility_three.goodsfacility_three_name like CONCAT('%', #{keyword}, '%')	        	        	           
	        </when>
	        <otherwise>
	        	where ${searchOption} like CONCAT('%', #{keyword}, '%')	        
	        </otherwise>
    	</choose>
	</select>
	
	<!-- 물품시설 1차 카테고리 목록 페이징 -->
	<select id="selectListGoodsFacilityCategoryOne" resultMap="selectListGoodsFacility">
		SELECT
			goodsfacility_one_code
			, goodsfacility_one_name
		FROM goodsfacility_one
		<choose>	      
	           <when test="searchOption == 'all'">
	           where goodsfacility_one.goodsfacility_one_code like CONCAT('%', #{keyword}, '%')
	           or goodsfacility_one.goodsfacility_one_name like CONCAT('%', #{keyword}, '%')        	        	           
	        </when>
	        <otherwise>
	        	where ${searchOption} like CONCAT('%', #{keyword}, '%')	        
	        </otherwise>
    	</choose>
		ORDER BY goodsfacility_one_code DESC
	</select>
	
	<!-- 물품시설 1차 카테고리 목록  검색 -->
	<select id="totalCountGoodsFacilityCategoryOne" parameterType="java.util.Map"  resultType="Integer">
		SELECT
			COUNT(*)
		FROM goodsfacility_one
		<choose>	      
			<when test="searchOption == 'all'">
	           where goodsfacility_one_code like CONCAT('%', #{keyword}, '%')
	           or goodsfacility_one_name like CONCAT('%', #{keyword}, '%')        	        	           
	        </when>
	        <otherwise>
	        	where ${searchOption} like CONCAT('%', #{keyword}, '%')	        
	        </otherwise>
    	</choose>
		ORDER BY goodsfacility_one_code DESC
	</select>
	
	<!-- 물품시설 2차 카테고리 목록 보기 페이징 -->
	<select id="selectListGoodsFacilityCategoryTwo" resultMap="selectListGoodsFacility">
		SELECT 
			goodsfacility_one.goodsfacility_one_code 
			, goodsfacility_one.goodsfacility_one_name
			, goodsfacility_two.goodsfacility_two_code
			, goodsfacility_two.goodsfacility_two_name
		FROM 
			goodsfacility_one
		INNER JOIN
			goodsfacility_two
		ON
			goodsfacility_one.goodsfacility_one_code = goodsfacility_two.goodsfacility_one_code
		<choose>	      
			<when test="searchOption == 'all'">
				 where goodsfacility_one.goodsfacility_one_name like CONCAT('%', #{keyword}, '%') 
				 or goodsfacility_two.goodsfacility_two_name like CONCAT('%', #{keyword}, '%')
	        </when>
	        <otherwise>
	        	where ${searchOption} like CONCAT('%', #{keyword}, '%')	        
	        </otherwise>
    	</choose>
		ORDER BY goodsfacility_two.goodsfacility_two_code DESC
	</select>
	
	<!-- 물품시설 2차 카테고리 목록 검색 -->
	<select id="totalCountGoodsFacilityCategoryTwo" parameterType="java.util.Map"  resultType="Integer">
		SELECT 
			COUNT(*)
		FROM 
			goodsfacility_one
		INNER JOIN
			goodsfacility_two
		ON
			goodsfacility_one.goodsfacility_one_code = goodsfacility_two.goodsfacility_one_code
		<choose>	      
	           <when test="searchOption == 'all'">
	           where goodsfacility_one.goodsfacility_one_name like CONCAT('%', #{keyword}, '%')
	           or goodsfacility_two.goodsfacility_two_name like CONCAT('%', #{keyword}, '%')         	        	           
	        </when>
	        <otherwise>
	        	where ${searchOption} like CONCAT('%', #{keyword}, '%')	        
	        </otherwise>
    	</choose>
    	ORDER BY goodsfacility_two.goodsfacility_two_code DESC
	</select>
	
	<!-- 물품시설 3차 카테고리 목록 보기 -->
	<select id="selectListGoodsFacilityCategoryThree" resultMap="selectListGoodsFacility">
		SELECT 
			goodsfacility_one.goodsfacility_one_code 
			, goodsfacility_one.goodsfacility_one_name
			, goodsfacility_two.goodsfacility_two_code
			, goodsfacility_two.goodsfacility_two_name
			, goodsfacility_three.goodsfacility_three_code
			, goodsfacility_three.goodsfacility_three_name
		FROM 
			goodsfacility_one
		INNER JOIN
			goodsfacility_two
		ON
			goodsfacility_one.goodsfacility_one_code = goodsfacility_two.goodsfacility_one_code
			
		INNER JOIN
			goodsfacility_three
		ON
			goodsfacility_two.goodsfacility_two_code = goodsfacility_three.goodsfacility_two_code
		<choose>	      
			<when test="searchOption == 'all'">
	           where goodsfacility_one.goodsfacility_one_name like CONCAT('%', #{keyword}, '%') 
	           or goodsfacility_two.goodsfacility_two_name like CONCAT('%', #{keyword}, '%') 
	           or goodsfacility_three.goodsfacility_three_name like CONCAT('%', #{keyword}, '%')      	        	           
	        </when>
	        <otherwise>
	        	where ${searchOption} like CONCAT('%', #{keyword}, '%')	        
	        </otherwise>
    	</choose>
		ORDER BY goodsfacility_three.goodsfacility_three_code DESC
	</select>
	
	<!-- 물품시설 3차 카테고리 목록 검색 -->
	<select id="totalCountGoodsFacilityCategoryThree" parameterType="java.util.Map"  resultType="Integer">
		SELECT 
			COUNT(*)
		FROM 
			goodsfacility_one
		INNER JOIN
			goodsfacility_two
		ON
			goodsfacility_one.goodsfacility_one_code = goodsfacility_two.goodsfacility_one_code
		INNER JOIN
			goodsfacility_three 
		ON
			goodsfacility_two.goodsfacility_two_code = goodsfacility_three.goodsfacility_two_code
		<choose>	     
			<when test="searchOption == 'all'">
	           where goodsfacility_one.goodsfacility_one_name like CONCAT('%', #{keyword}, '%')
	           or goodsfacility_two.goodsfacility_two_code like CONCAT('%', #{keyword}, '%') 
	           or goodsfacility_three.goodsfacility_three_name like CONCAT('%', #{keyword}, '%')      	        	           
	        </when>
	        <otherwise>
	        	where ${searchOption} like CONCAT('%', #{keyword}, '%')	        
	        </otherwise>
    	</choose>
		ORDER BY goodsfacility_three.goodsfacility_three_code DESC
	</select>
	
	
	<!-- 2차 리스트 insert용 물품시설 1차 카테고리 목록 보기 -->
	<select id="selectJoinListGoodsFacilityCategoryOne" resultMap="selectListGoodsFacility">
	SELECT
		goodsfacility_one_code
		, goodsfacility_one_name
	FROM goodsfacility_one
	ORDER BY goodsfacility_one_code DESC
	</select>

	<!-- 3차 리스트 insert용 물품시설 2차 카테고리 목록 보기 -->
	<select id="selectJoinListGoodsFacilityCategoryTwo" resultMap="selectListGoodsFacility">
	SELECT
		goodsfacility_one.goodsfacility_one_code 
		, goodsfacility_one.goodsfacility_one_name
		, goodsfacility_two.goodsfacility_two_code
		, goodsfacility_two.goodsfacility_two_name
	FROM goodsfacility_one, goodsfacility_two
	WHERE
		goodsfacility_one.goodsfacility_one_code=goodsfacility_two.goodsfacility_one_code
	ORDER BY goodsfacility_two_code DESC
	</select>
	
	<!-- 1차 카테고리 등록 -->
	<insert id="insertGoodsFacilityCategoryOne" parameterType="kr.or.nationRental.goodsFacility.service.GoodsFacilityCategoryDto">
	INSERT INTO goodsfacility_one (
		goodsfacility_one_code
		, goodsfacility_one_name
	) VALUES (
		NULL
		, #{goodsfacilityOneName}
	)
	</insert>
	
	<!-- 2차 카테고리 등록 -->
	<insert id="insertGoodsFacilityCategoryTwo" parameterType="kr.or.nationRental.goodsFacility.service.GoodsFacilityCategoryDto">
	INSERT INTO goodsfacility_two (
		goodsfacility_two_code
		, goodsfacility_one_code
		, goodsfacility_two_name
	) VALUES (
		NULL
		, #{goodsfacilityOneCode}
		, #{goodsfacilityTwoName}
	)
		</insert>
	
	<!-- 3차 카테고리 등록 -->
	<insert id="insertGoodsFacilityCategoryThree" parameterType="kr.or.nationRental.goodsFacility.service.GoodsFacilityCategoryDto">
	INSERT INTO goodsfacility_three (
		goodsfacility_three_code
		, goodsfacility_two_code
		, goodsfacility_three_name
	) VALUES (
		NULL
		, #{goodsfacilityTwoCode}
		, #{goodsfacilityThreeName}
	)
	</insert>
	
	<!-- 1차 카테고리 삭제 -->
	<delete id="deleteGoodsFacilityCategoryOne" parameterType="kr.or.nationRental.goodsFacility.service.GoodsFacilityCategoryDto">
	DELETE 
		FROM goodsfacility_one 
		WHERE goodsfacility_one_code = #{goodsfacilityOneCode}
	</delete>
	
	<!-- 2차 카테고리 삭제 -->
	<delete id="deleteGoodsFacilityCategoryTwo" parameterType="kr.or.nationRental.goodsFacility.service.GoodsFacilityCategoryDto">
	DELETE 
		FROM goodsfacility_two 
		WHERE goodsfacility_two_code = #{goodsfacilityTwoCode}
	</delete>
	
	<!-- 3차 카테고리 삭제 -->
	<delete id="deleteGoodsFacilityCategoryThree" parameterType="kr.or.nationRental.goodsFacility.service.GoodsFacilityCategoryDto">
	DELETE 
		FROM goodsfacility_three 
		WHERE goodsfacility_three_code = #{goodsfacilityThreeCode}
	</delete>
	
</mapper>